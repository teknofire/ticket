#!/usr/bin/env ruby
# frozen_string_literal: true

# Usage: ticket cleanup
# Summary: Clean up local ticket info for solved/closed tickets
# Provide ticket completions
# Built-in help

$LOAD_PATH.unshift File.join(ENV['_TICKET_ROOT'], 'share/ticket')

require 'clamp'
require 'helpers/common'
require 'helpers/ticket'

class CleanCommand < Ticket::Command
  option '--complete', :flag, 'autocomplete output', hidden: true
  option ['-y', '--yes'], :flag, 'Auto repond yes to all questions', attribute_name: :yes
  option ['-a', '--any'], :flag, 'Clean up any tickets even if they aren\'t solved', attribute_name: :any
  parameter '[CLIENT]', 'name of client to clean', attribute_name: :client, default: 'all'

  def execute
    return autocomplete if complete?

    delete_tickets
    cleanup_client_directories
  rescue Ticket::NotFound => e
    puts e.message
  end

  def delete_tickets
    client = nil if client == 'all'
    tickets = Ticket::Info.all(client)

    unless any?
      tickets.select! do |ticket|
        %w[closed solved].include?(ticket.status)
      end
    end

    if tickets.empty?
      prompt.say 'No tickets to clean up'
      return
    end

    if client.nil? && !yes?
      if any?
        puts 'List all local tickets'.green
      else
        puts 'Found the following closed tickets'.green
      end

      format = '%-15s %-6s %s'
      puts # intentionally blank
      puts format(format, 'Client', 'ID', 'Status')
      puts '-' * 40
      tickets.each { |t| puts format(format, t.client.capitalize, t.id, t.status) }
      puts '-' * 40

      unless prompt.yes?('Are you sure you want to delete the above tickets?')
        return
      end
    end

    tickets.each do |ticket|
      ticket.delete(yes: true)
    end
  end

  def cleanup_client_directories
    # clean up any empty client directories
    clients = Ticket::Info.clients.select { |c| Ticket::Info.empty?(c) }
    return if clients.empty?

    prompt.say 'Cleaning up empty client directories'

    clients.each do |c|
      path = Ticket::Info.client_path(c)
      prompt.say "\u{2716}".red + " Removing #{c.capitalize}..."
      FileUtils.rmdir(path)
    end

    prompt.say 'Finished cleaning client directories'.green
  end

  def autocomplete
    opts = %w[--help]

    puts opts.join("\n")
    exit
  end
end

CleanCommand.run
