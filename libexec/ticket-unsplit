#!/usr/bin/env ruby
# frozen_string_literal: true

# Usage: ticket unsplit
# Summary: unsplit give file into OUTPUT_FILE
# Provide ticket completions

$LOAD_PATH.unshift File.join(ENV["_TICKET_ROOT"], "share/ticket")

require "clamp"
require "helpers/ticket_info"

class UnsplitCommand < Clamp::Command
  include TicketInfo

  option "--complete", :flag, "autocomplete output", hidden: true

  parameter "OUTPUT_FILE", "output file", attribute_name: :output_file
  parameter "INPUT_FILES ...", "input files", attribute_name: :input_files

  def execute
    return autocomplete if complete?

    raise "Output file already exists" if File.exist?(output_file)

    input_files.sort.each do |file|
      cmd = ["cat", file, ">> #{output_file}"]
      system(cmd.join(" "))
    end
    # example usage
    # unless File.exists?(file)
    #   signal_usage_error "file doesn't exist"
    # end

    # Put the rest of the unsplit command here
  end

  def autocomplete
    opts = %w[--help]

    puts opts.join("\n")
    exit
  end
end

UnsplitCommand.run
